Be a Good Listener and Reader✌️

(1) Why you need a software?
--> Suppose there is one person who work in finance on the basis of returns, policy, funds and for these he / she have to do calculations and somethings it gets wrong with it. So, we suggest him to buy one computer because it can do every type of calculations, like softwares use for editing the photo is Photoshop.
    we can listen any song using spotify or other softwares.Computer can perform to its potential to do any work at one time doing 100 to 1000 works because it runs on different softwares. and this person want one new software as the current situation is don't have a software. So, we develop one new software for it's work and computer can only understand Binary language.
    It is also known as Machine language.And the person don't know this langauage and hence communication doesn't happeens with computers. We develop one software and develop one tricks to perform calculations a set of intructions for the computer to perform the steps.
    And we give the file to that person and the person now can calculate premium by the set of instructions it has in the computer by the file installed in it.

(2) Machine code:
    --> Computer has one important resource is Processor.
    -It has Memory unit, control unit, Arithmetic logical Unit.
    - Then, introduced RAM it can perform various task with it's intructions.
    - And also Cache it is intermediate 
    -Software is present is in the form of a file which is executable as (.exe)
    - Machine code is a binary code. It is platform Dependent.
    The tangible part of the system is Hardware. To use the hardware for allocation, memory and many more for the utilization, file and process management and all these is come into Kernel that how to us hardware. and all other task also combination of both is known as OS.
    OS => Kernel + Task. And in today's generation also present GUI.
    -The software which are present in our computer is .exe file that is understandable language then it will be process to OS. Then, it will read the instruction and pass it to the Hardware.

(3) How to build a software using C/C++
    --> In today generation we have to learn language like C, C++, java, Python, Javascript, etc.
    Instead of .exe we will build according to the extensions Like in C it goes as .C => Source file
    One is Pre-processor, Compiler and Linker is use to build Software.
    > From .C file to .exe it requires build by the program like Pre-processor reads the files and makes some changes then pass to Compiler then translate the code making it object file and passing it to Linker then uses library code + object file makes the .exe file that is a Software.
    --> (1) Create a source file, (2) build the software From Install the preprocessor, Compiler and Linker. (3) Download and Install the Software


Agenda: (1)IDE, (2) Download and Install, (3) Verify Installation

(1) Integrated Development Environment:
    --> We have many features, tools so that with the help of these integrated tools are present at one place to use it to build Softwares.
    - For using preprocessor, compiler and linker we need some commands. Example: CMD
    - And by using IDE we can use more features as it is a beginner friendly.
    - The turbo c3 was built in the year 1980's and it is of 16 bit and after 40 years we are using advanced IDE instead of this use Codeblocks, VS Code, etc.
    - In every IDE there is source code, build tools, Debugging Tools.

    *Installation: 
        (1) Codeblocks: 
                        - Link: codeblocks.org, downloads-> Download the binary release, For windows, linus, mac os.
        (2) Vs Code: 
                - Download VS Code editor
                - MINGw: mingw compiler,
                         Sourceforge.net/projects/Mingw-64
                         Download and Install

                - Extensions: (1) C/C++ Intelliscence,
                              (2) Code Runner
                - File: ->Preference->Settings
                        -> Extensions
                        -> Run Code COnfiguration
                                Run in terminal ☑️

                        --> Preference- settings - Extensions - Run code configuration - Run in terminal


History of C :
    (1) Multics,
    (2) Evolution of C Language
    (3) Version History

        (1) Multics:
            -Multiplexed Information and computing services.
            - It is an OS
            - Planning and development started in 1964.
            - Initially it was a cooperative project led by MIT and AT&T'S BELL Laboratory.
            - It was developed on the GE645 computer.

            *AT&T'S BELL Laboratory:
                - American Telephone and Telegraph 
                - Alexander Graham BELL
                - Was founded in 1885
                - 9 Nobel prizes have been awarded at the bell lab for work completion.
                - Languages developed at bell labs:
                    => B, C, C++, S, SNOBOL, AWk, AMPL
                - It was acquired by NOKIA in 2016.

            *BELL Labs Pulled Out of Multics:
                - Bell labs pulled out of the project in 1969.
                - Ken Thompson and Dennis Ritchie were their on Multics project from AT&T'S 
                - Ken Thompson decided to build his own OS.
                - BCPL => Basic Command Programming Language.
                - Ken Thompson derived a new language from BCPL known as B language (as an honour or respect towards Martin richards) and developed in the year 1969.

            (2) Evolution of C Language:
                - Denis Ritchie friend of Ken Thompson developed the compiled programming language C as a replacement for the interpreted language B.
                - UNIX operating operating system was written in B Language and then rewritten in C language. 
                - C has consistently ranked amongst the top two languages in TIOBE Index.
                    (A measure of a popularity of a programming language.)


            (3) Version History of C:
                - K&R Version (V1.0) => 1978 [in today's generation we think as x=-5 as x has stored the value but at that time it was about x = x-5 as a operator and to overcome this they got the version as operator x-=5.]
                - ANSI C => 
                - C89
                - C90
                - C95
                - C99 => 1999- Major release of C language where single line comment was introduced, Variable language array.
                - C11 => 2011 - gets() to Fgets() was introduced.
                - C17 => 2018 - Only bug fixes.



                How to compile & run: Open terminal and write gcc hyphine(-) std = c11(version of c) file name then file name with extensions and then compiled ./file name
                    gcc -std=c11 -o first first.c
                    ./filename


* Tokens, Data Types and Variable Declaration: 

    (1) Tokens: 
        - It is generally known as words
        (A) what are tokens?
            - It is also known as lexical Elements
            - The text of C/C++ program consists of tokens and whitespace.
            - the token is the smallest element of a C/C++ program that is meaningful to the compiler.
            - Parser is a program whose job is to seperate these tokens.

                    * parser recognizes these type of tokens:
                            - Constants (Literals)
                            - Identifiers (Variables, Functions ....)
                            - Keywords
                            - Operators
                            - Punctuators

                            int a = 5; (int is a keyword, a is a variable or identifier, = is a operator, 5 is a constant and ";" is a punctuator.)
                            ._Token1_._token2_._token3_._token4_._ ......

                            Whitespaces: 
                                - tokens are usually seperated by white spaces, which can be one or more.
                                    - Blanks (single or more blanks)
                                    - Tabs (Tabs)
                                    - New lines(new line from the cursor)
                                    - Form Feed(vertically same column it goes below at the same position)
                                    - Comments (Comments are text ignored by the compiler and it is for Developers i.e. Humans.)
                                        => Comments are useful for documentation of your code and useful for programmers.
                                        => There are two types of comments:
                                                (1) Single Line Comments(//),
                                                (2) Multiline Comments(/* _______ */)


                                                Sample program in C:
                                                    operators, punctuators, constants, Identifiers, keywords, comments

                                                        int main(){
                                                            int a,b,c; //Variables
                                                            printf("Enter two numbers:");
                                                            scanf("%d %d", &a,&b);
                                                            c=a+b;
                                                            printf("Sum is %d", c);

                                                        }
                                                            /* main function body ends here */

        (B) Constants
        (C) Variables
        (D) Keywords
        (E) Comments


